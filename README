Building the Outernet Rx:

Clone the outernet-rx repository. This repo is primarily build scripts and uses submodules to pull in the primary components.


#> git clone -b pillar --recursive https://github.com/crosstool-ng/outernet-rx.git

Next we need to build the cross-compiler.

#> wget http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.20.0.tar.bz2
#> tar jxvf crosstool-ng-1.20.0.tar.bz2
#> cd crosstool-ng-1.20.0/
#> ./configure --enable-local
#> make && make install
#> cp <outernet-rx>/crosstool-ng.config .config
#> ./ct-ng build

The resulting cross-compiler will be in ~/x-tools/. Recomendation is to put it into /opt
#> sudo mkdir /opt/toolchains/
#> sudo mv ~/x-tools/arm-m6-linux-gnueabi/ /opt/toolchains/
#> sudo chown -R root.root /opt/toolchains/arm-m6-linux-gnueabi/

Change to the outernet-rx tree. Buildroot will look for the cross_compiler in /opt/toolchains.
If this is not the location, then it needs to be changed:
#> make buildroot-menuconfig

The kernel img tool needs 32-bit libs, so on a 64-bit system:
#> sudo apt-get install libstdc++6:i386

Build the FW
#> make

There are some convienience targets in the make file:

buildroot-menuconfig - will setup the buildroot defconfig and run menconfig
linux-menuconfig - will setup tye kernels config and run menuconfig
clean - Cleans the entire tree
